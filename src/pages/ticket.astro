---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Ticket">
	<header>SmartTicket</header>
    <div class="bienvenida">
        <h1>¡Bienvenido!</h1>
        <p>Gracias por visitarnos. Por favor, siga las instrucciones en la pantalla para generar su turno. Estamos aquí para ayudarle.</p>
    </div>
    <div class="pregunta">
        ¿Es usted cliente de ATB Bank? <br/>
        <div class="botones">
            <button class="boton" id="yesBtn" onclick="IsClient()">Sí</button>
            <button class="boton" id="noBtn" onclick="IsntClient()">No</button>
        </div>
    </div>
    <div class="pie">
        ¡Gracias por su paciencia y preferencia!
    </div>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.7/signalr.min.js" is:inline></script>
	<script is:inline>
        let yesBtn = document.getElementById("yesBtn");
        let noBtn = document.getElementById("noBtn");

		const connection = new signalR.HubConnectionBuilder()
                .withUrl("https://atbapi.websitos256.com/tickets",{
                    skipNegotiaton:true,
                    transport: signalR.HttpTransportType.WebSockets
                })
                .withAutomaticReconnect()
                .configureLogging(signalR.LogLevel.Information)
                .build();

		connection.on("GenerarTicket", (ticket) => {
            console.log("Ticket generado: ", ticket);
            if(ticket == "El banco esta cerrado"){
                alert("El banco esta cerrado, por favor vuelva en horario de atención");
                return;
            }
			sessionStorage.setItem("ticket",ticket);
            window.location.href = "/myticket";
        });
		async function IsClient(){
            try {
                yesBtn.disabled = true;
                noBtn.disabled = true;
                await connection.invoke("GenerarTicket");
                
                
            } catch (error) {
                yesBtn.disabled = false;
                noBtn.disabled = false;
                console.log(error);
            }
		}
		async function IsntClient(){
            try {
                yesBtn.disabled = true;
                noBtn.disabled = true;
                await connection.invoke("GenerarTicket");
            } catch (error) {
                yesBtn.disabled = false;
                noBtn.disabled = false;
                console.log(error);
            }
		}
		async function StartConnection(){
			try {
				await connection.start();
				console.log("Connected to hub");
			} catch (error) {
				console.log(error);
			}
		}
		StartConnection();
	</script>
</Layout>

<style>
        body {
            font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            margin: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            background-color: #ffffff;
            padding-top: 60px;
            box-sizing: border-box;
        }
        header {
            background-color: #072146;
            color: white;
            padding: 10px 0;
            font-size: 24px;
            width: 100%;
            text-align: left;
            padding-left: 20px;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 1000;
        }
        .bienvenida {
            text-align: center;
            margin: 20px 0;
        }
        .pregunta {
            background-color: #043263;
            color: white;
            padding: 40px 20px;
            border-radius: 10px;
            text-align: center;
            font-size: 20px;
            margin-bottom: 20px;
            width: 90%; 
            max-width: 600px; 
            box-sizing: border-box;
        }
        .botones {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 20px;
            flex-wrap: wrap;
        }
        .boton {
            background-color: #cccccc;
            padding: 15px 30px;
            border: none;
            border-radius: 5px;
            font-size: 18px;
            cursor: pointer;
            flex: 1 1 100px;
            max-width: 200px; 
            box-sizing: border-box;
        }
        .boton:hover {
            background-color: #bbbbbb;
        }
        .pie {
            text-align: center;
            margin-top: 20px;
            font-size: 14px;
            color: #072146;
        }
    </style>
</style>
